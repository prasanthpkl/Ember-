{
  "compilerOptions": {
    "target": "ES2019",
    "allowJs": false,
    "module": "Node16",
    "moduleResolution": "Node16",
    "noEmitOnError": true,
    "inlineSourceMap": true,
    "inlineSources": true,
    "experimentalDecorators": true,
    "strictNullChecks": true,
    "baseUrl": ".",
    "paths": {
      "dummy/tests/*": [
        "tests/*",
        "tests/dummy/lib/in-repo-a/test-support/*"
      ],
      "dummy/*": [
        "tests/dummy/app/*",
        "tests/dummy/lib/in-repo-a/app/*",
        "tests/dummy/lib/in-repo-b/app/*"
      ],
      "in-repo-a/*": [
        "tests/dummy/lib/in-repo-a/addon/*"
      ],
      "in-repo-a/test-support": [
        "tests/dummy/lib/in-repo-a/addon-test-support/"
      ],
      "in-repo-a/test-support/*": [
        "tests/dummy/lib/in-repo-a/addon-test-support/*"
      ],
      "in-repo-b/*": [
        "tests/dummy/lib/in-repo-b/addon/*"
      ]
    },
    // We *really* don't want this on, but our hand is forced somewhat at the
    // moment: the types for `console-ui` are correct for consuming `inquirer`
    // in the pre-Node16 world, but don't interoperate correctly when consumed
    // by a CJS-default package in the TS Node16+ world *and* consume an ESM
    // package. Our path forward there is to update `console-ui` to publish a
    // dual-mode package with types and runtime code to support it.
    "skipLibCheck": true
  },
  "include": [
    "tests"
  ],
  "exclude": [
    "tests/dummy/app/snippets"
  ]
}
